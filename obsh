#!/bin/bash

set -e

USAGE="
Obashidian - Obsidian Shell CLI (obsh)

Query data from obsidian vault for analysis and automation direct from the command line.

Usage:
${0} <cmd> <args>
"

obshcli="${0}"

# If is not in a vault, exit
if [[ ! -d ".obsidian" ]]; then
  echo "Error: This isn't an obsidian vault."
  exit 1
fi

## Helper function to calculate date in OSX and Linux
#
# Ex: date "yesterday" "+%d-%m-%Y"
# for linux: date -d "yesterday" "+%d-%m-%Y"
# for osx: date -v-1d "+%d-%m-%Y"
#
# @param {string} offset - offset to calculate date allowed values: yesterday, tomorrow, today
# @return {string} date in format DD-MM-YYYY
function _cdate() {
  offset="${1:-"today"}"
  if [[ "$(uname)" == "Darwin" ]]; then
    if [[ "${offset}" == "yesterday" ]]; then
      date -v-1d "+%d-%m-%Y"
    elif [[ "${offset}" == "tomorrow" ]]; then
      date -v+1d "+%d-%m-%Y"
    else
      date "+%d-%m-%Y"
    fi
  else
    date -d ${offset} "+%d-%m-%Y"
  fi
}

CMD=${1?"${USAGE}"}
if [[ "${CMD}" == "tag" ]]; then
  shift
  TAG="#${1?"${USAGE}"}"

  # Grep all files in current dir but ignoring hidden files/dirs
  grep -r --exclude="*/\.*" "${TAG}" . | sed "s/${TAG}//" | sed -E "s/^\.\/(.*\.md):(.*)$/-\2 \n  \[ref](\1\) \n/"
  exit 0
fi

# Reminder cmd
# Check if a reminder is due
# This is the reminder format #reminder:DD-MM-YYYY
if [[ "${CMD}" == "reminder" ]]; then
  shift
  DATE=${1-"$(_cdate)"}
  echo "Reminders for ${DATE}"
  grep -r --exclude="*/\.*" "#reminder:${DATE}" . | sed -E "s/^\.\/(.*\.md):(.*)$/-\2 \n  \[ref](\1\) \n/"
  exit 0
fi

if [[ "${CMD}" == "reminders" ]]; then
  shift
  printf "All reminders \n\n"
  grep -r --exclude="*/\.*" "#reminder" . | sed -E "s/^\.\/(.*\.md):(.*)$/-\2 \n  \[ref](\1\) \n/"
  exit 0
fi

# Collect blocks of content from the vault
# This is the block format: 
#<!-- ini:<block_name> -->
#   content
#<!-- end:<block_name> -->
if [[ "${CMD}" == "block" ]]; then
  shift
  BLOCK=${1?"${USAGE}"}

  echo "-- ${BLOCK} --"
  grep -rl "<!-- ini:$BLOCK -->" . | \
    xargs -I{} awk "/<!-- ini:$BLOCK -->/{f=1;next} /<!-- end:$BLOCK -->/{f=0} f" {} 

  exit 0
fi

if [[ "${CMD}" == "daily" ]]; then
  shift
  echo "
---
title: Daily
date: $(_cdate)
---

[[daily/$(_cdate 'yesterday')|yesterday]]
[[daily/$(_cdate 'tomorrow')|tomorrow]]

## Todos

$($obshcli tag todo)

## Assumptions

$($obshcli tag assumption)

## Today reminders

$($obshcli reminder)

## Waiting

$($obshcli tag waiting)

$(cat "./daily/$(_cdate 'yesterday').md" \
	| rg --multiline --multiline-dotall '# Inbox.*(^#)' \
  | sed 's/##? Inbox//')
"
  exit 0
fi
 
echo "ERROR: ${0} unknown command ${CMD}"
echo "${USAGE}"
exit 1
